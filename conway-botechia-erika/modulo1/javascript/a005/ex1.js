/*Parte 1
Construa um programa, seguindo as instruÃ§Ãµes abaixo:

a) Declare uma variÃ¡vel para armazenar um nome, sem atribuir um valor a essa variÃ¡vel.

b) Declare uma variÃ¡vel para armazenar uma idade, sem atribuir um valor a essa variÃ¡vel.

c) Imprima na tela o tipo dessas variÃ¡veis que acabou de criar, usando o comando typeof.

d) Reflita: por que esse tipo foi impresso? Escreva a resposta em um comentÃ¡rio de cÃ³digo.

e) Depois, disso, atualize o cÃ³digo para perguntar ao usuÃ¡rio seu nome e sua idade, atribuindo esses dois valores Ã s variÃ¡veis que acabou de criar.

ğŸ’¡Se vocÃª receber um erro de cÃ³digo nessa etapa, reflita sobre o tipo de declaraÃ§Ã£o que utilizou.

f) Novamente, imprima na tela o tipo dessas variÃ¡veis. O que vocÃª notou? Escreva em um comentÃ¡rio de cÃ³digo.

g) Para finalizar, imprima na tela a mensagem: "OlÃ¡, nome, vocÃª tem idade anos". Lembre-se: nome e idade sÃ£o os valores inseridos pelo usuÃ¡rio.

ğŸ’¡ Dica: para imprimir mais de um valor na mesma linha, vocÃª pode usar essa sintaxe:

console.log(valor1, valor2)*/


const askByPrompt = (askMsg) =>{
    const askPrompt = prompt(askMsg)
    const typeAnalisis = typeof Number(askPrompt) === typeof 1 ? (Number(askPrompt)): askPrompt
    return typeAnalisis
}

let value1 = askByPrompt("Insira sua idade")
let value2 = askByPrompt("Insira seu Nome"); 


const printUserNameAge=()=>{
     const idade = askByPrompt("Insira sua idade");
      const nome = askByPrompt("Insira seu Nome");
    const msg = `OlÃ¡, ${nome}, vocÃª tem ${idade} anos`
}